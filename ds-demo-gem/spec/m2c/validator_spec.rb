####################################################################################################
# @author       David Kirwan https://github.com/davidkirwan
# @description  Finesce M2C Parser Gem
#
# @date         2014-01-20
####################################################################################################

require_relative '../spec_helper'


describe Finesce::M2C::Validator do
  
  before :all do
    @datablocks = [
      "M2C LTDT10V60T17V3T18V0T19V4T21V3T22V32T23V2T300V80T200V1T205V166T210V0T215V6130T220V12000T310V16T230V1T452V680T232V1T305V6200T315V16T320V65000T325V1T400V1T402V1T410V0T412V0T414V1T420V0T422V0T430V0T432V0T440V0T442V0T444V0T500V0T510V0T450V1170T452V680T225V99T330V166T610V630T112V2145T113V1411T114V0T700V0T705V0T707V0T709V0T710V0T460V2889T462V96T150V63133T160V251C",
      "M2C LTDT10V60T17V3T18V0T19V4T21V3T22V32T23V2T300V80T200V1T205V166T210V0T215V6050T220V12000T310V16T230V1T452V680T232V1T305V6200T315V16T320V65000T325V1T400V1T402V1T410V0T412V1T414V1T420V0T422V0T430V0T432V0T440V0T442V0T444V0T500V0T510V0T450V1180T452V680T225V99T330V166T610V630T112V2151T113V1411T114V0T700V0T705V0T707V0T709V0T710V0T460V2869T462V97T150V63516T160V255C",
      "M2C LTDT10V60T17V3T18V0T19V4T21V3T22V32T23V2T300V80T200V1T205V166T210V10T215V5960T220V12000T310V16T230V1T452V680T232V1T305V6200T315V16T320V65000T325V1T400V1T402V1T410V0T412V1T414V1T420V0T422V0T430V0T432V0T440V0T442V0T444V0T500V0T510V0T450V1170T452V680T225V99T330V166T610V630T112V2152T113V1411T114V0T700V0T705V0T707V0T709V0T710V0T460V2889T462V96T150V63618T160V269C",
      "M2C LTDT10V60T17V3T18V0T19V4T21V3T22V32T23V2T300V80T200V1T205V166T210V0T215V6130T220V12000T310V16T230V1T452V680T232V1T305V6200T315V16T320V65000T325V1T400V1T402V1T410V0T412V1T414V1T420V0T422V0T430V0T432V0T440V0T442V0T444V0T500V0T510V0T450V1170T452V680T225V99T330V166T610V630T112V2152T113V1411T114V0T700V0T705V0T707V0T709V0T710V0T460V2869T462V96T150V63633T160V253C",
      "M2C LTDT10V60T17V3T18V0T19V4T21V3T22V32T23V2T300V80T200V1T205V166T210V0T215V6050T220V12000T310V16T230V1T452V680T232V1T305V6200T315V16T320V65000T325V1T400V1T402V1T410V0T412V1T414V1T420V0T422V0T430V0T432V0T440V0T442V0T444V0T500V0T510V0T450V1180T452V680T225V99T330V166T610V630T112V2155T113V1411T114V0T700V0T705V0T707V0T709V0T710V0T460V2882T462V96T150V63776T160V261C",
      "M2C LTDT10V60T17V3T18V0T19V4T21V3T22V32T23V2T300V80T200V1T205V166T210V10T215V6050T220V11910T310V16T230V1T452V680T232V1T305V6200T315V16T320V65000T325V1T400V1T402V1T410V0T412V0T414V1T420V0T422V0T430V0T432V0T440V0T442V0T444V0T500V0T510V0T450V1170T452V680T225V99T330V166T610V630T112V2154T113V1411T114V0T700V0T705V0T707V0T709V0T710V0T460V2863T462V96T150V63741T160V259C",
      "M2C LTDT10V60T17V3T18V0T19V4T21V3T22V32T23V2T300V80T200V1T205V166T210V0T215V6210T220V12000T310V16T230V1T452V680T232V1T305V6200T315V16T320V65000T325V1T400V1T402V1T410V0T412V1T414V1T420V0T422V0T430V0T432V0T440V0T442V0T444V0T500V0T510V0T450V1170T452V680T225V99T330V166T610V630T112V2154T113V1411T114V0T700V0T705V0T707V0T709V0T710V0T460V2882T462V95T150V63734T160V250C",
      "M2C LTDT10V60T17V3T18V0T19V4T21V3T22V32T23V2T300V80T200V1T205V166T210V0T215V6050T220V12000T310V16T230V1T452V680T232V1T305V6200T315V16T320V65000T325V1T400V1T402V1T410V0T412V1T414V1T420V0T422V0T430V0T432V0T440V0T442V0T444V0T500V0T510V0T450V1180T452V680T225V99T330V166T610V630T112V2154T113V1411T114V0T700V0T705V0T707V0T709V0T710V0T460V2899T462V96T150V63728T160V265C",
      "M2C LTDT10V60T17V3T18V0T19V4T21V3T22V32T23V2T300V80T200V1T205V166T210V0T215V6050T220V12000T310V16T230V1T452V680T232V1T305V6200T315V16T320V65000T325V1T400V1T402V1T410V0T412V1T414V1T420V0T422V0T430V0T432V0T440V0T442V0T444V0T500V0T510V0T450V1190T452V680T225V99T330V166T610V630T112V2154T113V1411T114V0T700V0T705V0T707V0T709V0T710V0T460V2885T462V96T150V63716T160V258C"
    ]
    
    @invalid_datablocks = [
      "T10V60T17V3T18V0T19V4T21V3T22V32T23V2T300V80T200V1T205V166T210V0T215V6130T220V12000T310V16T230V1T452V680T232V1T305V6200T315V16T320V65000T325V1T400V1T402V1T410V0T412V0T414V1T420V0T422V0T430V0T432V0T440V0T442V0T444V0T500V0T510V0T450V1170T452V680T225V99T330V166T610V630T112V2145T113V1411T114V0T700V0T705V0T707V0T709V0T710V0T460V2889T462V96T150V63133T160V251C",
      "M2C LTDT10V60T17V3T18V0T19V4T21V3T22V32T23V2T300V80T200V1T205V166T210V0T215V6050T220V12000T310V16T230V1T452V680T232V1T305V6200T315V16T320V65000T325V1T400V1T402V1T410V0T412V1T414V1T420V0T422V0T430V0T432V0T440V0T442V0T444V0T500V0T510V0T450V1180T452V680T225V99T330V166T610V630T112V2151T113V1411T114V0T700V0T705V0T707V0T709V0T710V0T460V2869T462V97T150V63516",
    ]
  end
  
  describe "#validate?" do
    context "when the datablock is valid" do
      it "should return true and a parsed datablock" do
        
        randomIndex = rand(0..8)
        
        valid, datablock = Finesce::M2C::Validator.validate?(@datablocks[randomIndex])
        valid.should eql true
      end
    end
    
    context "when the datablock is invalid" do
      it "should raise an Finesce::M2C::Exceptions::InvalidCRC exception" do
        
        randomIndex = rand(0..1)
        
        if randomIndex == 0
          expect { Finesce::M2C::Validator.validate?(@invalid_datablocks[randomIndex]) }.to raise_error(Finesce::M2C::Exceptions::InvalidHead)
        else
          expect { Finesce::M2C::Validator.validate?(@invalid_datablocks[randomIndex]) }.to raise_error(Finesce::M2C::Exceptions::InvalidCRC)
        end
      end
    end
  end
  
end
